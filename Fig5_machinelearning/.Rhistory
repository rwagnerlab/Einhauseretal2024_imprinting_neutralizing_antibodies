library(ablandscapes)
library(titertools)
library(r3js)
library(htmlwidgets)
library(webshot2)
library(png)
library(grid)
library(gridExtra)
library(ggplot2)
library(patchwork)
library(gdata)
getwd()
set.seed(100)
#help(package="ablandscapes")
#help(package="meantiter")
#help(package="Racmacs")
source("./landscapes/functions/remove_reactivity_bias.R")
source("./landscapes/functions/map_longinfo.R")
source("./landscapes/functions/sams_landscape_functions.R")
'%notin%' <- Negate('%in%')
figure_dir <- "./landscapes/figures"
if(!dir.exists("./landscapes/singles")){dir.create("./landscapes/singles")}
if(!dir.exists(figure_dir)){dir.create(figure_dir)}
sr_colors <- read.csv("./sr_group_colors.csv", sep = ";", row.names = "SerumGroup")
# read in data
load("./adjustment/workspace_adjusted_long_simple.Rda")
visits <- unique(export_simple$visit)
View(export_simple)
export_simple$days_visit_unscaled<-NULL
save(export_simple,"./adjustment/workspace_adjusted_long_simple.Rda")
#clear workspace and load packages
rm(list=ls())
library(readxl)
library(dplyr)
library(tidyverse)
library(censReg)
library(geepack)
library(AER)
library(ggplot2)
library(patchwork)
library(tidyr)
`%notin%` <- Negate(`%in%`)
#make directories
if(!dir.exists("./adjustment")){dir.create("./adjustment")}
###read data#####
#read in data and assign variable scales
data <- as.data.frame(read_excel("./NT_Covako_complete_long.xlsx"))
colnames(data) <- c('ID_num','ID_study','visit','D614G','Alpha','Delta','BA1','BA2','BA5','BQ','XBB','JN','variant','vaccine','group','study_center')
data$visit <- as.factor(data$visit)
#make neutralization data numeric
for(i in 4:12){
data[,i]<-as.numeric(data[,i])
}
data$variant<-as.factor(data$variant)
data$vaccine<-as.factor(data$vaccine)
data$group<-as.factor(data$group)
data$ID_num<-as.factor(data$ID_num)
#######prepare the data########
#subset the groups of interest and make long for the adjustment model
#subset to remove unused groups
workspace <- subset(data,!(group %in% c("PO", "PA", "PD")))
#remove unused factor levels
workspace$group <- as.character(workspace$group)
workspace$group <- as.factor(workspace$group)
#make long
workspace_long <- workspace %>% pivot_longer(
cols = c('D614G','Alpha','Delta','BA1','BA2','BA5','BQ','XBB','JN'),
names_to = "virus",
values_to = "neutralization"
)
#read in data to retrieve the days_visit##########
days<-as.data.frame(read_excel("./Covako_Visits.xlsx"))
days<-days[,c(3,16:19)]
source("C:/Users/sebas/Desktop/covako_r/0_initial_dataclear&adjustment_togit.R", echo=TRUE)
source("C:/Users/sebas/Desktop/covako_r/Figure3_mapping.R", echo=TRUE)
source("C:/Users/sebas/Desktop/covako_r/Figure4_Landscapes.R", echo=TRUE)
View(export_simple)
#this script uses functions and code from RÃ¶ssler, Netzl et al.
#setup page and load metadata
rm(list = ls())
library(Racmacs)
library(tidyverse)
library(meantiter)
library(ablandscapes)
library(titertools)
library(r3js)
library(htmlwidgets)
library(webshot2)
library(png)
library(grid)
library(gridExtra)
library(ggplot2)
library(patchwork)
library(gdata)
getwd()
set.seed(100)
#help(package="ablandscapes")
#help(package="meantiter")
#help(package="Racmacs")
source("./landscapes/functions/remove_reactivity_bias.R")
source("./landscapes/functions/map_longinfo.R")
source("./landscapes/functions/sams_landscape_functions.R")
'%notin%' <- Negate('%in%')
figure_dir <- "./landscapes/figures"
if(!dir.exists("./landscapes/singles")){dir.create("./landscapes/singles")}
getwd()
set.seed(100)
#help(package="ablandscapes")
#help(package="meantiter")
#help(package="Racmacs")
source("./landscapes/functions/remove_reactivity_bias.R")
source("./landscapes/functions/map_longinfo.R")
source("./landscapes/functions/sams_landscape_functions.R")
'%notin%' <- Negate('%in%')
figure_dir <- "./landscapes/figures"
if(!dir.exists("./landscapes/singles")){dir.create("./landscapes/singles")}
if(!dir.exists(figure_dir)){dir.create(figure_dir)}
sr_colors <- read.csv("./sr_group_colors.csv", sep = ";", row.names = "SerumGroup")
# read in data
load("./adjustment/workspace_adjusted_long_simple.Rda")
View(export_simple)
visits <- unique(export_simple$visit)
i=1
#for debugging: i = 1
map_long <- subset(export_simple, export_simple$visit == visits[i])
# Read the base map
map <- read.acmap(paste0("./fig3_mapping/map",i,".ace"))
map <- removeAntigens(map, c("XBB","JN","BQ"))
lims <- Racmacs:::mapPlotLims(map, sera = FALSE)
#ags_to_fit_lndscp <- agNames(map)
ags_to_fit_lndscp <- c("D614G", "Alpha", "Delta","BA1", "BA2", "BA5")
ag.colors <- c('#C0392B', '#9B59B6', '#2980B9',
'#E67E22','#F1C40F', '#1ABC9C', '#34495e','#5f495e','#7f495e')
agFill(map) <- ag.colors[1:length(ags_to_fit_lndscp)]
map_long %>%
select(adjusted_neutralization, virus, ID_study, group) -> titerdata
colnames(titerdata) <-c("titer", "ag_name", "sr_name", "sr_group")
# remove non titrated sera and variants not measured for all visists
titerdata <- titerdata %>%
filter(titer != "*")%>%
filter(ag_name %in% ags_to_fit_lndscp)
View(titerdata)
map_long %>%
select(adjusted_neutralization, virus, ID_study, group) -> titerdata
View(titerdata)
View(titerdata)
View(titerdata)
map_long %>%
select(adjusted_neutralization, virus, ID_study, group) -> titerdata
View(titerdata)
map_long %>%
select(adjusted_neutralization, virus, ID_study, group) -> titerdata
map_long %>%
ungroup() %>%
select(adjusted_neutralization, virus, ID_study, group) -> titerdata
View(titerdata)
colnames(titerdata) <-c("titer", "ag_name", "sr_name", "sr_group")
# remove non titrated sera and variants not measured for all visists
titerdata <- titerdata %>%
filter(titer != "*")%>%
filter(ag_name %in% ags_to_fit_lndscp)
titerdata %>%
group_by(
sr_group
) -> titerdata
titerdata %>%
group_map(
get_titertable
) -> titertables
lndscp_fits <- lapply(
titertables,
function(titertable) {
ablandscape.fit(
titers = titertable[,ags_to_fit_lndscp],
bandwidth = 1,
degree = 1,
method = "cone",
error.sd = 1,
acmap = map,
control = list(
optimise.cone.slope = TRUE
)
)
}
)
titertables_groups <- group_data(titerdata)
# Add impulses
titerdata %>%
group_by(
sr_group,
ag_name
) %>%
summarize(gmt = titertools::gmt(titer, dilution_stepsize = 2)["mean", "estimate"]) %>%
# manually set GMT's that are lower than that to LOD2
mutate(gmt = ifelse(gmt < log2(0.8), log2(0.8), gmt))-> gmt_data
source("C:/Users/sebas/Desktop/covako_r/Figure4_Landscapes.R", echo=TRUE)
source("C:/Users/sebas/Desktop/covako_r/Figure5.0_MLDatapreprocess.R", echo=TRUE)
source("S:/WAGNER/2 Dokumente/Literatur/Eigene Paper/Manuskripte/23-11-06 CoVaKo19/scaled/covako_r/SupplFig1_BQJNXBB_Arrange.R", echo=TRUE)
source("S:/WAGNER/2 Dokumente/Literatur/Eigene Paper/Manuskripte/23-11-06 CoVaKo19/scaled/covako_r/SupplFig2_foldchange.R", echo=TRUE)
source("S:/WAGNER/2 Dokumente/Literatur/Eigene Paper/Manuskripte/23-11-06 CoVaKo19/scaled/covako_r/SupplFig3_triplevax.R", echo=TRUE)
source("S:/WAGNER/2 Dokumente/Literatur/Eigene Paper/Manuskripte/23-11-06 CoVaKo19/scaled/covako_r/SupplFig4_gams.R", echo=TRUE)
source("S:/WAGNER/2 Dokumente/Literatur/Eigene Paper/Manuskripte/23-11-06 CoVaKo19/scaled/covako_r/SupplFig5_Triplevax_MB.R", echo=TRUE)
#sensitivity analysis to determine the impact of vector vaccines
library(readxl)
#sensitivity analysis to determine the impact of vector vaccines
library(readxl)
library(dplyr)
library(writexl)
library(tidyverse)
rm(list=ls())
load("./adjustment/workspace_adjusted_simple.Rda")
load("./adjustment/workspace_adjusted_wide_simple.Rda")
View(exportwide_simple)
vaccine_type<-read_excel("./vaccinations.xlsx")
View(vaccine_type)
View(vaccine_type)
View(vaccine_type)
#adjust the format to workable data
vaccine_type <- vaccine_type %>%
mutate(across(5:21, ~ case_when(
is.na(.) ~ 0,
. == "x" ~ 1,
TRUE ~ .
)))
View(vaccine_type)
#adjust the format to workable data
vaccine_type <- vaccine_type %>%
mutate(across(5:21, ~ case_when(
is.na(.) ~ "0",
. == "x" ~ "1",
TRUE ~ .
)))
# Convert the specified columns to numeric
vaccine_type <-  vaccine_type %>%
mutate(across(5:21, as.numeric))
View(vaccine_type)
#get all the vector vaccines
vaccine_type$vector <- vaccine_type$A + vaccine_type$J +vaccine_type$A_A +vaccine_type$A_B+vaccine_type$J_B + vaccine_type$A_A_B +vaccine_type$A_B_B+vaccine_type$A_M_B
View(vaccine_type)
vaccine_type<-vaccine_type %>%
mutate(sum_col_5_to_21 = rowSums(across(5:21)))
View(vaccine_type)
vaccine_type$no_vector <- vaccine_type$sum_col_5_to_21 - vaccine_type$vector
View(vaccine_type)
View(vaccine_type)
vaccine_type <- vaccine_type %>%
mutate(sum_col_with_a_j = rowSums(across(contains("A", "J"))))
vaccine_type <- vaccine_type %>%
mutate(sum_col_with_a_j = rowSums(across(contains(c("A", "J")))))
# Select columns whose names contain "a", "j", or both
selected_cols <- grep("[aj]", names(vaccine_type), value = TRUE)
# Select columns whose names contain "a", "j", or both
selected_cols <- grep("[AJ]", names(vaccine_type), value = TRUE)
# Calculate the sum across rows for selected columns
vaccine_type$sum_a_j <- rowSums(vaccine_type[selected_cols])
sum(vaccine_type$sum_a_j-vaccine_type$vector)
#sensitivity analysis to determine the impact of vector vaccines
library(readxl)
library(dplyr)
library(writexl)
library(tidyverse)
rm(list=ls())
load("./adjustment/workspace_adjusted_wide_simple.Rda")
vaccine_type<-read_excel("./vaccinations.xlsx")
#adjust the format to workable data
vaccine_type <- vaccine_type %>%
mutate(across(5:21, ~ case_when(
is.na(.) ~ "0",
. == "x" ~ "1",
TRUE ~ .
)))
# Convert the specified columns to numeric
vaccine_type <-  vaccine_type %>%
mutate(across(5:21, as.numeric))
#get all the vector vaccines
# Select columns whose names contain "a", "j", or both
selected_cols <- grep("[AJ]", names(vaccine_type), value = TRUE)
# Calculate the sum across rows for selected columns
vaccine_type$vector<- rowSums(vaccine_type[selected_cols])
#all vaccines
vaccine_type<-vaccine_type %>%
mutate(sumall = rowSums(across(5:21)))
#substract the vector vaccines
vaccine_type$no_vector <- vaccine_type$sumall - vaccine_type$vector
#now select the dataof interest
vaccine_type <- vaccine_type %>%
select(all_of(`ID Proband`, Group, vector, no_vector))
#now select the dataof interest
vaccine_type <- vaccine_type %>%
select(all_of(c("`ID Proband`", "Group", "vector", "no_vector")))
View(vaccine_type)
#now select the dataof interest
vaccine_type <- vaccine_type %>%
select(all_of(c("ID Proband", "Group", "vector", "no_vector")))
View(vaccine_type)
#now select the dataof interest
vaccine_type <- vaccine_type %>%
select(all_of(c(`ID Proband`, "Group", "vector", "no_vector")))
#now select the dataof interest
vaccine_type <- vaccine_type %>%
select(all_of(c("IDProband", "Group", "vector", "no_vector")))
#now select the dataof interest
vaccine_type <- vaccine_type %>%
select(all_of(c("ID
Proband", "Group", "vector", "no_vector")))
colnames(vaccine_type$`ID
Proband`)<- "ID_Proband"
names<-colnames(vaccine_type)
names[1]<-"ID_Proband"
colnames(vaccine_type)<- names
#now select the dataof interest
vaccine_type <- vaccine_type %>%
select(all_of(c("ID_Proband", "Group", "vector", "no_vector")))
View(vaccine_type)
#now select the dataof interest
vaccine_type <- vaccine_type %>%
select(all_of(c("ID_Proband", "vector", "no_vector")))
View(exportwide_simple)
merged_data <- exportwide_simple %>%
left_join(vaccination_type, by = c("ID_study" = "ID_Proband"))
merged_data <- exportwide_simple %>%
left_join(vaccine_type, by = c("ID_study" = "ID_Proband"))
View(merged_data)
merged_data <- merged_data %>%
pivot_longer(cols = c("D614G","Alpha","Delta","BA1","BA2","BA5","BQ","XBB","JN"), names_to = "virus")
View(merged_data)
head(merged_data)
View(merged_data)
library(ggplot2)
ggplot(merged_data, aes(x = virus, y = value, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Virus",
y = "Value",
fill = "Vector"
) +
theme_minimal()
merged_data <- na.omit(merged_data)
ggplot(merged_data, aes(x = virus, y = value, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Virus",
y = "Value",
fill = "Vector"
) +
theme_minimal()
#sensitivity analysis to determine the impact of vector vaccines
library(readxl)
library(dplyr)
library(writexl)
library(tidyverse)
library(ggplot2)
rm(list=ls())
load("./adjustment/workspace_adjusted_wide_simple.Rda")
vaccine_type<-read_excel("./vaccinations.xlsx")
#adjust the format to workable data
vaccine_type <- vaccine_type %>%
mutate(across(5:21, ~ case_when(
is.na(.) ~ "0",
. == "x" ~ "1",
TRUE ~ .
)))
# Convert the specified columns to numeric
vaccine_type <-  vaccine_type %>%
mutate(across(5:21, as.numeric))
#get all the vector vaccines
# Select columns whose names contain "a", "j", or both
selected_cols <- grep("[AJ]", names(vaccine_type), value = TRUE)
# Calculate the sum across rows for selected columns
vaccine_type$vector<- rowSums(vaccine_type[selected_cols])
#all vaccines
vaccine_type<-vaccine_type %>%
mutate(sumall = rowSums(across(5:21)))
#substract the vector vaccines
vaccine_type$no_vector <- vaccine_type$sumall - vaccine_type$vector
#take care of weird column name
names<-colnames(vaccine_type)
names[1]<-"ID_Proband"
colnames(vaccine_type)<- names
#now select the dataof interest
vaccine_type <- vaccine_type %>%
select(all_of(c("ID_Proband", "vector", "no_vector")))
merged_data <- exportwide_simple %>%
left_join(vaccine_type, by = c("ID_study" = "ID_Proband"))
merged_data <- merged_data %>%
pivot_longer(cols = c("D614G","Alpha","Delta","BA1","BA2","BA5","BQ","XBB","JN"), names_to = "virus", values_to = "neutralization")
merged_data <- na.omit(merged_data)
ggplot(merged_data, aes(x = virus, y = neutralization, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Virus",
y = "Value",
fill = "Vector-Vaccine"
) +
theme_minimal()
ggplot(merged_data, aes(x = virus, y = neutralization, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Virus",
y = "Value",
fill = "Vector-Vaccine"
) +
scale_y_log10() +
theme_minimal()
ggplot(merged_data, aes(x = virus, y = neutralization, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Virus",
y = "Neutralization IC 50",
fill = "Vector-Vaccine"
) +
scale_y_log10() +
theme_minimal()
ggplot(merged_data, aes(x = virus, y = neutralization, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Neutralized Virus",
y = "Neutralization IC 50",
fill = "Vector-Vaccine"
) +
scale_y_log10() +
theme_minimal()
figureDir<-paste0(getwd(),"/sensitivityanalysis_vector")
if(!dir.exists(figureDir)){dir.create(figureDir)}
png(paste0(figureDir,"/sensitivity_analysis_vector.png"), res = 300, width = 2000, height = 1500)
ggplot(merged_data, aes(x = virus, y = neutralization, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Neutralized Virus",
y = "Neutralization IC 50",
fill = "Vector-Vaccine"
) +
scale_y_log10() +
theme_minimal()
dev.off()
figureDir<-paste0(getwd(),"/sensitivityanalysis_vector")
if(!dir.exists(figureDir)){dir.create(figureDir)}
png(paste0(figureDir,"/sensitivity_analysis_vector.png"), res = 600, width = 2000, height = 1500)
ggplot(merged_data, aes(x = virus, y = neutralization, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Neutralized Virus",
y = "Neutralization IC 50",
fill = "Vector-Vaccine"
) +
scale_y_log10() +
theme_minimal()
dev.off()
png(paste0(figureDir,"/sensitivity_analysis_vector.png"), res = 300, width = 2500, height = 1500)
ggplot(merged_data, aes(x = virus, y = neutralization, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Neutralized Virus",
y = "Neutralization IC 50",
fill = "Vector-Vaccine"
) +
scale_y_log10() +
theme_minimal()
dev.off()
png(paste0(figureDir,"/sensitivity_analysis_vector.png"), res = 300, width = 3000, height = 1600)
ggplot(merged_data, aes(x = virus, y = neutralization, fill = factor(vector))) +
geom_boxplot() +
facet_wrap(~ visit, scales = "free") +
labs(
x = "Neutralized Virus",
y = "Neutralization IC 50",
fill = "Vector-Vaccine"
) +
scale_y_log10() +
theme_minimal()
dev.off()
# Calculate summary statistics
summary_stats <- merged_data %>%
group_by(virus, visit, vector) %>%
summarize(mean_value = mean(value), .groups = "drop")
# Calculate summary statistics
summary_stats <- merged_data %>%
group_by(virus, visit, vector) %>%
summarize(mean_value = mean(neutralization), .groups = "drop")
# Check if vector = 1 is always higher than vector = 0
summary_comparison <- summary_stats %>%
pivot_wider(names_from = vector, values_from = mean_value) %>%
mutate(test_result = ifelse(`1` > `0`, "Higher", "Not Higher"))
# Print summary comparison
print("Summary Statistics and Comparison:")
print(summary_comparison)
# Perform statistical test (paired t-test assuming normality)
test_result <- wilcox.test(value ~ vector, data = data, paired = TRUE)
# Perform statistical test (wilcoxon)
test_result <- wilcox.test(value ~ vector, data = data)
# Perform statistical test (wilcoxon)
test_result <- wilcox.test(neutralization ~ vector, data = merged_data)
# Print test result
print("Paired t-test Result:")
print(test_result)
source("S:/WAGNER/2 Dokumente/Literatur/Eigene Paper/Manuskripte/23-11-06 CoVaKo19/scaled/covako_r/Figure5.1_machinelearning_rforest.R", echo=TRUE)
visit_labels <- c(v1 = "Visit 1", v2 = "Visit 2", v4 = "Visit 4", v5 = "Visit 5")
save(vaccinated_allaccuracies, file = "./vaccinated_allaccuracies.Rda")
es
save(unvaccinated_allaccuracies, file = "./unvaccinated_allaccuracies.Rda")
write_xlsx(vaccinated_allaccuracies, path = "./vaccinated_allaccuracies.xlsx")
write_xlsx(unvaccinated_allaccuracies, path = "./unvaccinated_allaccuracies.xlsx")
save.image("S:/WAGNER/2 Dokumente/Literatur/Eigene Paper/Manuskripte/23-11-06 CoVaKo19/scaled/covako_r/Fig5_machinelearning/forest.RData")
